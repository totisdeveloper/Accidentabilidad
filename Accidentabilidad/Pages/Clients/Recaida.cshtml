@page
@model Accidentabilidad.Pages.Clients.RecaidaModel
@{
}

<h2>Registro de arrastre/recaida</h2>
<link href="~/css/recaida.css" rel="stylesheet" />
<form method="POST" id="form_accidente_reciada">
    <div class="text-danger" asp-validation-summary="ModelOnly"></div>

    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Folio</label>
        <div class="col-sm-6">
            <input type="text" class="form-control" asp-for="accidente.Folio" disabled>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Fecha en que ocurrio el accidente:</label>
        <div class="col-sm-6">
            <input id="fecha_ocurrencia" class="form-control" type="date" asp-for="accidente.Fecha_ocurrencia" />
            <span class="text-danger" asp-validation-for="accidente.Fecha_ocurrencia"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">El accidente va a reportar para el mes de:</label>
        <div class="col-sm-6">
            <input id="monthInput" class="form-control" type="month" asp-for="accidente.Fecha_registro_reporte" />
            <span class="text-danger" asp-validation-for="accidente.Fecha_registro_reporte"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Trabajador:</label>
        <div class="col-sm-6">
            <select class="form-control" id="exampleSelect" asp-for="accidente.Nomina" asp-items="Model.empleados">
                <option value="">-- Selecciona trabajador --</option>
            </select>
            <span class="text-danger" asp-validation-for="accidente.Nomina"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Área:</label>
        <div class="col-sm-6">
            <select class="form-select" asp-for="accidente.Area_ID" asp-items="@Model.areas">
            </select>
            <span class="text-danger" asp-validation-for="accidente.Area_ID"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Atención:</label>
        <div class="col-sm-6">
            <select id="country" class="form-select" asp-for="accidente.Atencion_ID" asp-items="@Model.atencion" onchange="filterCities()">
            </select>
            <span class="text-danger" asp-validation-for="accidente.Atencion_ID"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Diagnostico:</label>
        <div class="col-sm-6">
            <textarea class="form-control" asp-for="accidente.Diagnostico" rows="3"></textarea>
            <span class="text-danger" asp-validation-for="accidente.Diagnostico"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">IPP:</label>
        <div class="col-sm-6">
            <input type="text" class="form-control" asp-for="accidente.IPP">
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Calificación:</label>
        <div class="col-sm-6">
            <select id="city" class="form-select" asp-for="accidente.Calificacion_ID">
                <option value="">--Seleccione calificacion--</option>
            </select>
            <span class="text-danger" asp-validation-for="accidente.Calificacion_ID"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Incapacidad inicial:</label>
        <div class="col-sm-6">
            <input id="Incapacidadinicial" class="form-control" type="date" asp-for="accidente.Incapacidad_inicial_date" />
            <span class="text-danger" asp-validation-for="accidente.Incapacidad_inicial"></span>
        </div>
    </div>
    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Inicio de labores:</label>
        <div class="col-sm-6">
            <input id="Iniciolabores" class="form-control" type="date" asp-for="accidente.Inicio_labores" />
            <span class="text-danger" asp-validation-for="accidente.Inicio_labores"></span>
        </div>
    </div>

    <div class="row mb-3">
        <label class="col-sm-3 col-form-label">Días subsidiados</label>
        <div class="col-sm-6">
            <input id="dias_sub" type="number" class="form-control" asp-for="accidente.Dias_subsidiados">
        </div>
    </div>
    @if (Model.usuario.Rol == "1" || Model.usuario.Rol == "2" || Model.usuario.Rol == "3")
    {
        <div class="row mb-3">
            <label class="col-sm-3 col-form-label">¿Se reporta?:</label>
            <div class="col-sm-6">
                <select class="form-select" asp-for="accidente.Reporta">
                    <option value="">-- Selecciona opción --</option>
                    <option value="SI">SI</option>
                    <option value="NO">NO</option>
                    <option value="DIAS">SOLO DÍAS</option>
                </select>
            </div>
        </div>
    }
    <div class="row mb-3">
        <div class="offset-sm-3 col-sm-3 d-grid">
            <button type="submit" class='btn btn-primary btn-sm'>Guardar</button>
        </div>
        <div class="col-sm-3 d-grid">
            <a class='btn btn-outline-primary btn-sm' href='/Clients' role="button">Cancelar</a>
        </div>
    </div>

    @if (Model.errorMessage.Length > 0)
    {
        <div class="row mb-3">
            <div class="offset-sm-3 col-sm-6 d-grid">
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    <strong>@Model.errorMessage</strong>
                    <button type="button" class='btn-close' data-bs-dismiss='alert' aria-label="Close"></button>
                </div>
            </div>
        </div>
    }

</form>


@section Scripts {
    <script>
        $(document).ready(function () {
            $('#exampleSelect').select2();
            document.getElementById('dias_sub').value = getDaysInCurrentMonth();
        })
        const cities = @Html.Raw(Json.Serialize(Model.Cities));

        function filterCities() {
            const selectedCountryId = document.getElementById("country").value;
            const citySelect = document.getElementById("city");


            citySelect.innerHTML = '<option value="">--Seleccione calificacion--</option>';

            if (cities) {
                cities.filter(city => city.countryId == selectedCountryId).forEach(city => {
                    let option = document.createElement("option");
                    option.value = city.id;
                    option.text = city.name;
                    citySelect.add(option);
                });
            }

            // Set the selected city if editing
            const selectedCityId = '@Model.SelectedCityId_';
            if (selectedCityId) {
                citySelect.value = selectedCityId;
            }
        }
        // Call filterCities on page load to set the city dropdown if editing
        filterCities();

        document.getElementById('Incapacidadinicial').addEventListener('change', calculateDaysDifference);
        document.getElementById('Iniciolabores').addEventListener('change', calculateDaysDifference);

        function calculateDaysDifference() {
            // Obtener las fechas del formulario
            const startDate = new Date(document.getElementById('Incapacidadinicial').value);
            const endDate = new Date(document.getElementById('Iniciolabores').value);

            // Comprobar que ambas fechas estén seleccionadas
            if (!isNaN(startDate) && !isNaN(endDate)) {
                // Calcular la diferencia en milisegundos
                const timeDifference = endDate - startDate;

                // Convertir la diferencia de milisegundos a días
                const daysDifference = timeDifference / (1000 * 3600 * 24);


                if (daysDifference >= 0 && daysDifference <= 31) {

                    // Mostrar el resultado en el campo de texto
                    document.getElementById('dias_sub').value = daysDifference;
                }
                else {
                    alert('El numero de dias no cumple con el rango permitido permitido')

                }
            }
        }

        function getDaysInCurrentMonth() {
            const today = new Date(); // Fecha actual
            const year = today.getFullYear();
            const month = today.getMonth(); // Mes actual (de 0 a 11)

            // Crear una fecha del primer día del siguiente mes y restarle un día
            const firstDayNextMonth = new Date(year, month + 1, 1);
            const lastDayCurrentMonth = new Date(firstDayNextMonth - 1);

            // Obtener el número del día del mes (esto será el número de días en el mes)
            const daysInMonth = lastDayCurrentMonth.getDate();

            return daysInMonth;
        }

    </script>
}
